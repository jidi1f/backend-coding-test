components: 
  schemas:
    Ride:
      properties:
        rideID:
          type: integer
          readOnly: true
          example: 1
        startLatitude:
          type: integer
          example: 66
          description: range from -90 to 90
        startLongitude:
          type: integer
          example: 170
          description: range from -180 to 180
        endLatitude:
          type: integer
          example: -80
          description: range from -90 to 90
        endLongitude:
          type: integer
          example: -65
          description: range from -180 to 180
        riderName:
          type: string
          example: John
        driverName:
          type: string
          example: Danil
        driverVehicle:
          type: string
          example: M2
        created:
          readOnly: true
          type: string
          format: date
          example: '2021-12-16 16:54:32'
      required:
        - riderName
        - driverName
        - driverVehicle
        - endLongitude
        - startLatitude
        - startLongitude
        - endLatitude

paths:
  /rides:
    post:
      tags:
        - Ride
      summary: Saves and returns new drive.
      description: Saves and returns new drive.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ride'
      responses: 
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride' 
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: string
                    example: 'Ride Validation Error'
                  details:
                    type: object
                    example: {}
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Something went wrong'
                  statusCode:
                    type: number
                    example: 500
                  statusMessage:
                    type: string
                    example: 'InternalServiceError'

    get:
      tags:
        - Ride
      summary: Returns all rides 
      description: use limit and offset query parameters for pagination
      parameters:
      - in: query
        name: offset
        schema:
          type: integer
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: integer
        description: The numbers of items to return
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  rides:
                    type: array
                    items:
                      - allOf:
                        - $ref: '#/components/schemas/Ride'
                  pagesTotal:
                    type: integer
                    example: 1
                  currentPage:
                    type: integer
                    example: 1
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Something went wrong'
                  statusCode:
                    type: number
                    example: 500
                  statusMessage:
                    type: string
                    example: 'InternalServiceError'
  
  /rides/{id}:
    get:
      tags:
        - Ride
      summary: Returns ride by id
      description: Returns ride by id
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride' 
        '404':
          description: Item was not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'No such ride found'
                  statusCode:
                    type: number
                    example: 404
                  statusMessage:
                    type: string
                    example: '404 Not found'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Something went wrong'
                  statusCode:
                    type: number
                    example: 500
                  statusMessage:
                    type: string
                    example: 'InternalServiceError'
